import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.io.File;
import java.io.IOException;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;


/**
 *
 * @author osito
 */
public class InicioJuego extends javax.swing.JFrame {

    private final String[] textos = {
        "<html>Hola amiguitos, bienvenidos al mundo Pokémon. Yo soy el profesor Oak y quiero preguntarte algo</html>",
        "<html>¿Estás listo para comenzar tu aventura Pokémon?</html>",
        "<html>Escoge tu primer Pokémon y que comience la aventura</html>"
    };
    private int textoIndex = 0; 
    private int letraIndex = 0;  
    private Timer timer;  

    public InicioJuego() {
        initComponents();
        this.setLocationRelativeTo(null);
        playBackgroundMusic("E:\\Media\\MusicaPoke\\PokeOak.wav");

        ImageIcon imagen1 = new ImageIcon("E:\\Media\\Menus\\Oak.jpg");
        Icon icono1 = new ImageIcon(imagen1.getImage().getScaledInstance(LblBox1.getWidth(), LblBox1.getHeight(), Image.SCALE_DEFAULT));
        LblBox1.setIcon(icono1);
        this.repaint();

        TxtPLetra();

        this.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    if (timer != null) {
                        timer.stop();
                    }
                    siguienteTexto();
                }
            }
        });

        this.setFocusable(true);
    }

    private void TxtPLetra() {
        String textoCompleto = textos[textoIndex];
        letraIndex = 0;

        timer = new Timer(100, (ActionEvent e) -> {
            if (letraIndex < textoCompleto.length()) {
                LblTxt.setText(LblTxt.getText() + textoCompleto.charAt(letraIndex));
                letraIndex++;
            } else {
                
                timer.stop();
            }
        });
        LblTxt.setText("");  
        timer.start(); 
    }

    private void siguienteTexto() {
        textoIndex = (textoIndex + 1) % textos.length;
        TxtPLetra();
    }
    
    
    public final void playBackgroundMusic(String filepath) {
        try {
            File audioFile = new File(filepath);
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioFile);
            Clip clip = AudioSystem.getClip();
            clip.open(audioStream);
            clip.start();
            clip.loop(Clip.LOOP_CONTINUOUSLY);
        } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
            System.out.println("Error al reproducir la música de fondo.");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        LblTxt = new javax.swing.JLabel();
        LblBox = new javax.swing.JLabel();
        LblBox1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LblTxt.setBackground(new java.awt.Color(248, 248, 248));
        LblTxt.setFont(new java.awt.Font("Engravers MT", 0, 18)); // NOI18N
        LblTxt.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        LblTxt.setOpaque(true);
        jPanel2.add(LblTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 650, 70));

        LblBox.setToolTipText("");
        jPanel2.add(LblBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 510, 90));

        LblBox1.setBackground(new java.awt.Color(102, 0, 51));
        LblBox1.setForeground(new java.awt.Color(255, 0, 51));
        LblBox1.setIcon(new javax.swing.ImageIcon("E:\\Media\\Menus\\Oak.jpg")); // NOI18N
        LblBox1.setToolTipText("");
        LblBox1.setOpaque(true);
        jPanel2.add(LblBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InicioJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InicioJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InicioJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InicioJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new InicioJuego().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LblBox;
    private javax.swing.JLabel LblBox1;
    private javax.swing.JLabel LblTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private static class KeyAdapter implements KeyListener {

        public KeyAdapter() {
        }

        @Override
        public void keyTyped(KeyEvent e) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        @Override
        public void keyPressed(KeyEvent e) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        @Override
        public void keyReleased(KeyEvent e) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }
}
